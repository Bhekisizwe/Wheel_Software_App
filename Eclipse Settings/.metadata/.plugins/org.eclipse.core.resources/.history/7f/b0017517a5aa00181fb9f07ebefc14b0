<?php
declare(strict_types=1);
namespace UserClasses\DataLayer;

/**
 *
 * @author Bheki Mthethwa
 *        
 */
class MiniProfMeasurementsDL extends DatabaseManager implements DatabaseFunctionsInt
{

    /**
     * (non-PHPdoc)
     *
     * @see \UserClasses\DataLayer\DatabaseFunctionsInt::getPrimaryKey()
     */
    public function getPrimaryKey(array $data):int
    {}

    /**
     * (non-PHPdoc)
     *
     * @see \UserClasses\DataLayer\DatabaseFunctionsInt::create()
     */
    public function create(array $data):bool
    {
        $connector=$this->dbConnect();  //connect to MariaDB database
        if(isset($connector)){
            //successfully connected to database
            /***INSERT MiniProf Measurements Data into Database*******/
            $query="INSERT INTO WheelMeasurements";
            $query.=" (MeasurementID,CoachNumber,SetNumber,AxleNumber,WheelID,OperatorName,";
            $query.="Meas_Date,Meas_Time,Sh,qR,FW,H)";
            $query.=" VALUES ('',?,?,?,?,?,?,?,?,?,?,?)";
            //prepare SQL script for execution
            $stmt=$connector->prepare($query);
            //bind parameters
            $coachNumber=$data["coachNumber"];
            $setNumber=$data["setNumber"];
            $axleNumber=$data["axleNumber"];
            $wheelID=$data["wheelID"];
            $operatorName=$data["operatorName"];
            $meas_date=$data["measurementDate"];
            $meas_time=$data["measurementTime"];
            $Sh=$data["flangeHeight"];
            $qR=$data["toeCreep"];
            $FW=$data["flangeWidth"];
            $H=$data["hollowing"];
            $stmt->bind_param("sisssssi",$company,$addr_arr['AddressType'],$addr_arr['AddressLine1'],$addr_arr['Surburb'],$addr_arr['City'],$addr_arr['Country'],$addr_arr['PostalCode'],$license_type);
            $status_message=$stmt->execute();
            $this->dbClose($connector); //Close Database Connection
            return $status_message;
        }
        else return false;
    }

    /**
     * (non-PHPdoc)
     *
     * @see \UserClasses\DataLayer\DatabaseFunctionsInt::update()
     */
    public function update(array $data):bool
    {}

    /**
     * (non-PHPdoc)
     *
     * @see \UserClasses\DataLayer\DatabaseFunctionsInt::dataExists()
     */
    public function dataExists(array $data):bool
    {}

    /**
     * (non-PHPdoc)
     *
     * @see \UserClasses\DataLayer\DatabaseFunctionsInt::delete()
     */
    public function delete(array $data):bool
    {}

    /**
     * (non-PHPdoc)
     *
     * @see \UserClasses\DataLayer\DatabaseFunctionsInt::searchData()
     */
    public function searchData(array $data):array
    {}
    
    public function searchSpecificWheelData(array $data):array {
        
    }
}

