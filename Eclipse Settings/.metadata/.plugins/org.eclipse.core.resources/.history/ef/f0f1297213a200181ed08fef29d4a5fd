<?php
declare(strict_types=1);
namespace UserClasses\DataLayer;

/**
 *
 * @author Bheki Mthethwa
 *        
 */
class ActivityLogDL extends DatabaseManager implements DatabaseFunctionsInt
{

    /**
     * (non-PHPdoc)
     *
     * @see \UserClasses\DataLayer\DatabaseFunctionsInt::getPrimaryKey()
     */
    public function getPrimaryKey(array $data):int
    {
        $connector=$this->dbConnect();  //connect to MariaDB database
        if(isset($connector)){
            /*********RETRIEVE ActivityLogTasks from Database*************/
            $query="SELECT TaskID FROM ActivityLogTasks WHERE TaskName=?";
            $stmt=$connector->prepare($query);
            $taskName=$data["taskArray2D"][0]["taskName"];            
            $stmt->bind_param("s",$taskName);
            $status=$stmt->execute();
            $stmt->store_result();
            $stmt->bind_result($taskID);
            if($status){
                $arr=array();   //array to store result set
                while($stmt->fetch()){
                    $arr["taskID"]=$taskID;                    
                }
                $this->dbClose($connector);
                return (int) $arr["taskID"];
            }
            else{
                $this->dbClose($connector);
                return 0;
            }
        }
        else return 0;
    }

    /**
     * (non-PHPdoc)
     *
     * @see \UserClasses\DataLayer\DatabaseFunctionsInt::create()
     */
    public function create(array $data):bool
    {
        $connector=$this->dbConnect();  //connect to MariaDB database
        if(isset($connector)){
            //successfully connected to database
            /***INSERT User Accounts Data into Database*******/
            $query="INSERT INTO ActivityLog";
            $query.=" (LogID,TaskID,TransactionName,Activity,ModifiedBy,DateModified,TimeModified) ";
            $query.="VALUES ('',?,?,?,?,DATE(NOW()),TIME(NOW()))";
            //prepare SQL script for execution
            $stmt=$connector->prepare($query);
            //bind parameters
            $taskID=$this->getPrimaryKey($data);
            $transactionName=$data["transactionName"];
            $activity=$data["activityAction"];
            $modifiedBy=$data["modifiedBy"];           
            $stmt->bind_param("isii",$taskID,$transactionName,$activity,$modifiedBy);
            $status_message=$stmt->execute();
            $this->dbClose($connector);
            return $status_message;
        }
        else return false;
    }

    /**
     * (non-PHPdoc)
     *
     * @see \UserClasses\DataLayer\DatabaseFunctionsInt::update()
     */
    public function update(array $data):bool
    {}

    /**
     * (non-PHPdoc)
     *
     * @see \UserClasses\DataLayer\DatabaseFunctionsInt::dataExists()
     */
    public function dataExists(array $data):bool
    {}

    /**
     * (non-PHPdoc)
     *
     * @see \UserClasses\DataLayer\DatabaseFunctionsInt::delete()
     */
    public function delete(array $data):bool
    {}

    /**
     * (non-PHPdoc)
     *
     * @see \UserClasses\DataLayer\DatabaseFunctionsInt::searchData()
     */
    public function searchData(array $data):array
    {}
    
    public function retrieveAllActivityTasks():array
    {
        $connector=$this->dbConnect();  //connect to MariaDB database
        if(isset($connector)){
            /*********RETRIEVE ALL ActivityTasks from Database*************/
            $query="SELECT * FROM ActivityLogTasks ORDER BY TaskName Asc";
            $result=$connector->query($query);
            if($result){
                $arr_2D=array();
                $i=0;
                while($rows=$result->fetch_assoc()){
                    $arr_2D["columnVisibility2DArray"][$i++]=$rows;
                }
                $this->dbClose($connector);
                return $arr_2D;
            }
            else{
                $this->dbClose($connector);
                return NULL;
            }
        }
        else return NULL;
    }
}

