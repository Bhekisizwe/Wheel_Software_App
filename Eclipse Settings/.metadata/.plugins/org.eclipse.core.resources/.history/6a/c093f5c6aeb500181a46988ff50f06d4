<?php
use \Psr\Http\Message\ServerRequestInterface as Request;
use \Psr\Http\Message\ResponseInterface as Response;
use UserClasses\BusinessLayer\WheelReprofilingData;
use UserClasses\BusinessObjects\WheelReprofilingDataBO;
use UserClasses\BusinessLayer\UserRole;
use UserClasses\BusinessObjects\UserRoleBO;
    //View Specific Wheel reprofiling data
    $app->get('/wheelreprofiling/{axleserialnumber_daterange}', function (Request $request, Response $response, array $args) {
        //Create Objects
        $wheelReprof=new WheelReprofilingData();
        $wheelReprofBO=new WheelReprofilingDataBO();
        $userrole=new UserRole();
        $userroleBO=new UserRoleBO();
        $reprofiling_str=$args["axleserialnumber_daterange"];
        $reprofiling_arr=explode("_",$reprofiling_str);
        $arr=$wheelReprofBO->getArray();
        if(isset($_SESSION["staffNumber"])){
            $userrole_arr["userRole2DArray"][0]["roleID"]=$_SESSION["roleID"];
            $userroleBO->set($userrole_arr);
            $accessRight="R";
            $activityName="Wheel Re-profiling Data Management";
            if($userrole->checkUserAuthorization($userroleBO, $accessRight, $activityName)){
                $arr=array();
                $reprofiling["axleSerialNumber"]=$reprofiling_arr[0];
                $reprofiling["startDate"]=$reprofiling_arr[1];
                $reprofiling["endDate"]=$reprofiling_arr[2];
                $wheelReprofBO->set($reprofiling);
                $reprof_data_arr=$wheelReprof->searchForReprofilingData($wheelReprofBO);
                for($i=0;$i<count($reprof_data_arr);$i++){
                    $wheelReprofBO->set($reprof_data_arr[$i]);
                    $wheelReprofBO->setTransactionStatus(true);
                    $arr[]=$wheelReprofBO->getArray();
                }
            }
            else {
                $wheelReprofBO->setTransactionStatus(false);
                $arr_err=array();
                $arr_err["errorCode"]="0x18";
                $arr_err["errorDescription"]="You have no access rights to carry out the action you attempted. Please contact the administrator to resolve this.";
                $arr_error["errorAssocArray"][18]=$arr_err;
                $wheelReprofBO->set($arr_error);
                $arr=$wheelReprofBO->getArray();
            }
        }
        else{
            $wheelReprofBO->setTransactionStatus(false);
            //write Error Code and Description
            $arr_err=array();
            $arr_err["errorCode"]="0x19";
            $arr_err["errorDescription"]="Session has expired";
            $arr_error["errorAssocArray"][19]=$arr_err;
            $wheelReprofBO->set($arr_error);
            $arr=$wheelReprofBO->getArray();
        }
        $arr_json=json_encode($arr);
        //destroy objects
        unset($wheelReprof);
        unset($wheelReprofBO);
        unset($userrole);
        unset($userroleBO);
        $res=$response->withHeader("Content-Type", "application/json");
        return $res->getBody()->write($arr_json);
    });
    
    //Does specific Wheel Reprofiling Data already exist in System
    $app->get('/wheelreprofiling/checkexistence/{axleserialnumber_serviceprovider_date}', function (Request $request, Response $response, array $args) {
        $wheelReprof=new WheelReprofilingData();
        $wheelReprofBO=new WheelReprofilingDataBO();
        $reprofiling_str=$args["axleserialnumber_serviceprovider_date"];        
        $reprofiling_arr=explode("_",$reprofiling_str);
        if(isset($_SESSION["staffNumber"])){
            $reprofiling["axleSerialNumber"]=$reprofiling_arr[0];
            $reprofiling["serviceProviderName"]=$reprofiling_arr[1];
            $reprofiling["dateOfService"]=$reprofiling_arr[2];
            $wheelReprofBO->set($reprofiling);
            $wheelReprofBO->setDataExistsStatus($wheelReprof->checkReprofilingDataExists($wheelReprofBO));
            $wheelReprofBO->setTransactionStatus(true);
            $arr=$wheelReprofBO->getArray();
        }
        else{
            $wheelReprofBO->setTransactionStatus(false);
            //write Error Code and Description
            $arr_err=array();
            $arr_err["errorCode"]="0x19";
            $arr_err["errorDescription"]="Session has expired";
            $arr_error["errorAssocArray"][19]=$arr_err;
            $wheelReprofBO->set($arr_error);
            $arr=$wheelReprofBO->getArray();
        }
        $arr_json=json_encode($arr);
        //destroy objects
        unset($wheelReprof);
        unset($wheelReprofBO);
        $res=$response->withHeader("Content-Type", "application/json");
        return $res->getBody()->write($arr_json);
    });
    
    //Add
    $app->post('/wheelreprofiling/add', function (Request $request, Response $response, array $args) {
        //Create Objects
        $wheelReprof=new WheelReprofilingData();
        $wheelReprofBO=new WheelReprofilingDataBO();
        $userrole=new UserRole();
        $userroleBO=new UserRoleBO();
        //Return Associative Array
        $form_data=json_decode($request->getBody()->getContents(),TRUE);  //get client form data
        if(isset($_SESSION["staffNumber"])){
            $userrole_arr["userRole2DArray"][0]["roleID"]=$_SESSION["roleID"];
            $userroleBO->set($userrole_arr);
            $accessRight="C";
            $activityName="Wheel Re-profiling Data Management";
            if($userrole->checkUserAuthorization($userroleBO, $accessRight, $activityName)){
                $wheelReprofBO->set($form_data);
                $wheelReprofBO->setStaffNumber($_SESSION["staffNumber"]);
                $wheelReprofBO->setTransactionStatus($wheelReprof->addReprofilingData($wheelReprofBO));
                $arr=$wheelReprofBO->getArray();
            }
            else{
                $wheelReprofBO->setTransactionStatus(false);
                $arr_err=array();
                $arr_err["errorCode"]="0x18";
                $arr_err["errorDescription"]="You have no access rights to carry out the action you attempted. Please contact the administrator to resolve this.";
                $arr_error["errorAssocArray"][18]=$arr_err;
                $wheelReprofBO->set($arr_error);
                $arr=$wheelReprofBO->getArray();
            }
        }
        else{
            $wheelReprofBO->setTransactionStatus(false);
            //write Error Code and Description
            $arr_err=array();
            $arr_err["errorCode"]="0x19";
            $arr_err["errorDescription"]="Session has expired";
            $arr_error["errorAssocArray"][19]=$arr_err;
            $wheelReprofBO->set($arr_error);
            $arr=$wheelReprofBO->getArray();
        }
        $arr_json=json_encode($arr);
        //destroy objects
        unset($wheelReprof);
        unset($wheelReprofBO);
        unset($userrole);
        unset($userroleBO);
        $res=$response->withHeader("Content-Type", "application/json");
        return $res->getBody()->write($arr_json);
        
    });
        
    //Update
    $app->post('/wheelreprofiling/update', function (Request $request, Response $response, array $args) {
        //Create Objects
        $wheelReprof=new WheelReprofilingData();
        $wheelReprofBO=new WheelReprofilingDataBO();
        $userrole=new UserRole();
        $userroleBO=new UserRoleBO();
        //Return Associative Array
        $form_data=json_decode($request->getBody()->getContents(),TRUE);  //get client form data
        if(isset($_SESSION["staffNumber"])){
            $userrole_arr["userRole2DArray"][0]["roleID"]=$_SESSION["roleID"];
            $userroleBO->set($userrole_arr);
            $accessRight="C";
            $activityName="Wheel Re-profiling Data Management";
            if($userrole->checkUserAuthorization($userroleBO, $accessRight, $activityName)){
                $wheelReprofBO->set($form_data);
                $wheelReprofBO->setStaffNumber($_SESSION["staffNumber"]);
                $wheelReprofBO->setTransactionStatus($wheelReprof->addReprofilingData($wheelReprofBO));
                $arr=$wheelReprofBO->getArray();
            }
            else{
                $wheelReprofBO->setTransactionStatus(false);
                $arr_err=array();
                $arr_err["errorCode"]="0x18";
                $arr_err["errorDescription"]="You have no access rights to carry out the action you attempted. Please contact the administrator to resolve this.";
                $arr_error["errorAssocArray"][18]=$arr_err;
                $wheelReprofBO->set($arr_error);
                $arr=$wheelReprofBO->getArray();
            }
        }
        else{
            $wheelReprofBO->setTransactionStatus(false);
            //write Error Code and Description
            $arr_err=array();
            $arr_err["errorCode"]="0x19";
            $arr_err["errorDescription"]="Session has expired";
            $arr_error["errorAssocArray"][19]=$arr_err;
            $wheelReprofBO->set($arr_error);
            $arr=$wheelReprofBO->getArray();
        }
        $arr_json=json_encode($arr);
        //destroy objects
        unset($wheelReprof);
        unset($wheelReprofBO);
        unset($userrole);
        unset($userroleBO);
        $res=$response->withHeader("Content-Type", "application/json");
        return $res->getBody()->write($arr_json);
        
    });
?>
