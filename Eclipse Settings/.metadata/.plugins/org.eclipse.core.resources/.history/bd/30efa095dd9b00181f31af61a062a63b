<?php
declare(strict_types=1);
namespace UserClasses\BusinessObjects;

/**
 *
 * @author Bheki Mthethwa
 *
 */
abstract class BusinessObject
{
    //status of request processing
    protected $transactionStatus=False;
    //associative array of errors
    protected $errorAssocArray;
    //action code sent from the client {Edit or Add}
    protected $actionCode;
    //number of fields contained in this Business Object
    private $objectNumOfFields=7;
    
    /**
     * @return boolean
     */
    public function getTransactionStatus()
    {
        return $this->transactionStatus;
    }

    /**
     * @return mixed
     */
    public function getErrorAssocArray()
    {
        return $this->errorAssocArray;
    }

    /**
     * @return mixed
     */
    public function getActionCode()
    {
        return $this->actionCode;
    }

    /**
     * @param boolean $transactionStatus
     */
    public function setTransactionStatus($transactionStatus)
    {
        $this->transactionStatus = $transactionStatus;
    }

    /**
     * @param mixed $errorAssocArray
     */
    public function setErrorAssocArray($errorAssocArray)
    {
        $this->errorAssocArray = $errorAssocArray;
    }

    /**
     * @param mixed $actionCode
     */
    public function setActionCode($actionCode)
    {
        $this->actionCode = $actionCode;
    }

    public function getArray():array {
        //create array to contain business objects data
        $arr=array();
        $i=0;   //count of number of Object parameters read into array.
        foreach($this as $key => $value){
            if($i<$this->objectNumOfFields){
                $arr[$key]=$value;
                $i++;
            }
        }
        return $arr;
    }
    
    public function setObjectParameters(array $arr) {
        $i=0;   //counter of number of objects read from array into object
        foreach ($this as $key => &$value){
            if($i<$this->objectNumOfFields){
                $value=$arr[$key];
                $i++;
            }
        }
    }
}



