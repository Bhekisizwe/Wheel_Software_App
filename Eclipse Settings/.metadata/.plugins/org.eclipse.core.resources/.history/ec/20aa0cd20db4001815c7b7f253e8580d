<?php
use \Psr\Http\Message\ServerRequestInterface as Request;
use \Psr\Http\Message\ResponseInterface as Response;
    //View All User Roles, Activity Names, and Report Column Names
    $app->get('/userrole', function (Request $request, Response $response, array $args) {
        //Create Objects
        $license=new License();
        $licenseBO=new SystemLicenseBO();
        if(isset($_SESSION["staffNumber"])){
            if($license->checkLicenseExists($licenseBO)){
                $licenseBO->setDataExistsStatus(true);
                $lic_arr=$license->listLicenseData($licenseBO);
                $licenseBO->set($lic_arr);
            }
            else {
                $licenseBO->setDataExistsStatus(false);
            }
            $licenseBO->setTransactionStatus(true);
            $arr=$licenseBO->getArray();
        }
        else{
            $licenseBO->setTransactionStatus(false);
            //write Error Code and Description
            $arr_err=array();
            $arr_err["errorCode"]="0x19";
            $arr_err["errorDescription"]="Session has expired";
            $arr_error["errorAssocArray"][19]=$arr_err;
            $licenseBO->set($arr_error);
            $arr=$licenseBO->getArray();
        }
        $arr_json=json_encode($arr);
        //destroy objects
        unset($license);
        unset($licenseBO);
        $res=$response->withHeader("Content-Type", "application/json");
        return $res->getBody()->write($arr_json);
    });
    
    //Check if User Role exists
    $app->get('/userrole/checkexistence/{userrolename}', function (Request $request, Response $response, array $args) {
        //Create Objects
        $user=new UserAccounts();
        $userBO=new UserAccountBO();
        $staffNumber=$args["staffnumber"];
        $arr=array();
        if(isset($_SESSION["staffNumber"])){
            $userBO->setStaffNumber($staffNumber);
            $userBO->setDataExistsStatus($user->checkUserAccountExists($userBO));
            $userBO->setTransactionStatus(true);
            $arr=$userBO->getArray();
        }
        else{
            $userBO->setTransactionStatus(false);
            //write Error Code and Description
            $arr_err=array();
            $arr_err["errorCode"]="0x19";
            $arr_err["errorDescription"]="Session has expired";
            $arr_error["errorAssocArray"][19]=$arr_err;
            $userBO->set($arr_error);
            $arr=$userBO->getArray();
        }
        $arr_json=json_encode($arr);
        //destroy objects
        unset($user);
        unset($userBO);
        $res=$response->withHeader("Content-Type", "application/json");
        return $res->getBody()->write($arr_json);
    });
    
    //View Access Rights
    $app->get('/userrole/{roleid}', function (Request $request, Response $response, array $args) {
        //Create Objects
        $user=new UserAccounts();
        $userBO=new UserAccountBO();
        $staffNumber=$args["staffnumber"];
        $arr=array();
        if(isset($_SESSION["staffNumber"])){
            $userBO->setStaffNumber($staffNumber);
            $user_arr=$user->listUserAccount($userBO);
            $userBO->setTransactionStatus(true);
            $userBO->set($user_arr);
            $arr=$userBO->getArray();
        }
        else{
            $userBO->setTransactionStatus(false);
            //write Error Code and Description
            $arr_err=array();
            $arr_err["errorCode"]="0x19";
            $arr_err["errorDescription"]="Session has expired";
            $arr_error["errorAssocArray"][19]=$arr_err;
            $userBO->set($arr_error);
            $arr=$userBO->getArray();
        }
        $arr_json=json_encode($arr);
        //destroy objects
        unset($user);
        unset($userBO);
        $res=$response->withHeader("Content-Type", "application/json");
        return $res->getBody()->write($arr_json);
    });
    
    //Add
    $app->post('/userrole/add', function (Request $request, Response $response, array $args) {
        //Return Associative Array
        $arr=json_decode($request->getBody()->getContents(),TRUE);
        
        
        $arr_json=json_encode($arr);    //Return JSON Data Object
        $res=$response->withHeader("Content-Type", "application/json");
        return $res->getBody()->write($arr_json);
        
    });
        
    //Update
    $app->post('/userrole/update', function (Request $request, Response $response, array $args) {
        //Return Associative Array
        $arr=json_decode($request->getBody()->getContents(),TRUE);
        
        
        $arr_json=json_encode($arr);    //Return JSON Data Object
        $res=$response->withHeader("Content-Type", "application/json");
        return $res->getBody()->write($arr_json);
        
    });
?>
