<?php
use \Psr\Http\Message\ServerRequestInterface as Request;
use \Psr\Http\Message\ResponseInterface as Response;
use UserClasses\BusinessLayer\ActivityLog;
use UserClasses\BusinessObjects\ActivityLogBO;
use UserClasses\BusinessLayer\UserRole;
use UserClasses\BusinessObjects\UserRoleBO;
    //View Specific Activity Logs
    $app->get('/activitylogservice/{taskid_daterange}', function (Request $request, Response $response, array $args) {
        //Create Objects
        $activity=new ActivityLog();
        $activityBO=new ActivityLogBO();
        $userrole=new UserRole();
        $userroleBO=new UserRoleBO();
        $searchdatesstr=$args["taskid_daterange"];
        $date_arr=explode("_",$searchdatesstr);
        for($i=0;$i<(count($date_arr)-2);$i++){
            $taskid_arr["taskArray2D"][$i]["taskID"]=(int) $date_arr[$i];
        }
        $arr=array();
        if(isset($_SESSION["staffNumber"])){
            $userrole_arr["userRole2DArray"][0]["roleID"]=$_SESSION["roleID"];
            $userroleBO->set($userrole_arr);
            $accessRight="R";
            $activityName="Activity Logs";
            if($userrole->checkUserAuthorization($userroleBO, $accessRight, $activityName)){
                $activityBO->setStartDate($date_arr[count($date_arr)-2]);
                $activityBO->setEndDate($date_arr[count($date_arr)-1]);
                $activityBO->set($taskid_arr);
                $activity_arr=$activity->searchForActivityReports($activityBO);
                $activityBO->setTransactionStatus(true);
                for($j=0;$j<count($activity_arr);$j++){
                    $activityBO->set($activity_arr[$j]);            ;
                    $arr[]=$activityBO->getArray();
                }    
            }
            else {
                $arr_err=array();
                $arr_err["errorCode"]="0x18";
                $arr_err["errorDescription"]="You have no access rights to carry out the action you attempted. Please contact the administrator to resolve this.";
                $arr_error["errorAssocArray"][18]=$arr_err;
                $alarmBO->set($arr_error);
                $arr=$alarmBO->getArray();
            }
        }
        else{
            $activityBO->setTransactionStatus(false);
            //write Error Code and Description
            $arr_err=array();
            $arr_err["errorCode"]="0x19";
            $arr_err["errorDescription"]="Session has expired";
            $arr_error["errorAssocArray"][19]=$arr_err;
            $activityBO->set($arr_error);
            $arr=$activityBO->getArray();
        }
        $arr_json=json_encode($arr);
        //destroy objects
        unset($activity);
        unset($activityBO);
        unset($userrole);
        unset($userroleBO);
        $res=$response->withHeader("Content-Type", "application/json");
        return $res->getBody()->write($arr_json);
    });
    
    //Generate PDF Report and email it.
    $app->get('/activitylogservice/generatepdf/{taskid_daterange}', function (Request $request, Response $response, array $args) {
        //Create Objects
        $activity=new ActivityLog();
        $activityBO=new ActivityLogBO();
        $userrole=new UserRole();
        $userroleBO=new UserRoleBO();
        $searchdatesstr=$args["taskid_daterange"];
        $date_arr=explode("_",$searchdatesstr);
        for($i=0;$i<(count($date_arr)-2);$i++){
            $taskid_arr["taskArray2D"][$i]["taskID"]=(int) $date_arr[$i];
        }
        $arr=array();
        if(isset($_SESSION["staffNumber"])){
            $userrole_arr["userRole2DArray"][0]["roleID"]=$_SESSION["roleID"];
            $userroleBO->set($userrole_arr);
            $accessRight="R";
            $activityName="Activity Logs";
            if($userrole->checkUserAuthorization($userroleBO, $accessRight, $activityName)){
                $activityBO->setStaffNumber($_SESSION["staffNumber"]);
                $activityBO->setStartDate($date_arr[count($date_arr)-2]);
                $activityBO->setEndDate($date_arr[count($date_arr)-1]);
                $activityBO->set($taskid_arr);
                $activityBO->setTransactionStatus($activity->generatePDFActivityReport($activityBO));
                $arr=$activityBO->getArray();
            }
            else {
                $arr_err=array();
                $arr_err["errorCode"]="0x18";
                $arr_err["errorDescription"]="You have no access rights to carry out the action you attempted. Please contact the administrator to resolve this.";
                $arr_error["errorAssocArray"][18]=$arr_err;
                $alarmBO->set($arr_error);
                $arr=$alarmBO->getArray();
            }
        }
        else{
            $activityBO->setTransactionStatus(false);
            //write Error Code and Description
            $arr_err=array();
            $arr_err["errorCode"]="0x19";
            $arr_err["errorDescription"]="Session has expired";
            $arr_error["errorAssocArray"][19]=$arr_err;
            $activityBO->set($arr_error);
            $arr=$activityBO->getArray();
        }
        $arr_json=json_encode($arr);
        //destroy objects
        unset($activity);
        unset($activityBO);
        unset($userrole);
        unset($userroleBO);
        $res=$response->withHeader("Content-Type", "application/json");
        return $res->getBody()->write($arr_json);
    });
    
    //View All Activity Names
    $app->get('/activitylogservice', function (Request $request, Response $response, array $args) {
        //Create Objects
        $activity=new ActivityLog();
        $activityBO=new ActivityLogBO();
        $userrole=new UserRole();
        $userroleBO=new UserRoleBO();
        if(isset($_SESSION["staffNumber"])){
            $userrole_arr["userRole2DArray"][0]["roleID"]=$_SESSION["roleID"];
            $userroleBO->set($userrole_arr);
            $accessRight="R";
            $activityName="Activity Logs";
            if($userrole->checkUserAuthorization($userroleBO, $accessRight, $activityName)){
                $list_activitynames_arr=$activity->listAllActivityNames();
                $activityBO->set($list_activitynames_arr);
                $activityBO->setTransactionStatus(true);
                $arr=$activityBO->getArray();
            }
            else {
                
            }        
        }
        else{
            $activityBO->setTransactionStatus(false);
            //write Error Code and Description
            $arr_err=array();
            $arr_err["errorCode"]="0x19";
            $arr_err["errorDescription"]="Session has expired";
            $arr_error["errorAssocArray"][19]=$arr_err;
            $activityBO->set($arr_error);
            $arr=$activityBO->getArray();
        }
        $arr_json=json_encode($arr);
        //destroy objects
        unset($activity);
        unset($activityBO);
        unset($userrole);
        unset($userroleBO);
        $res=$response->withHeader("Content-Type", "application/json");
        return $res->getBody()->write($arr_json);
    });
?>