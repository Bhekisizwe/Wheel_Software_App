<?php
use PHPUnit\Framework\TestCase;
use UserClasses\BusinessLayer\LoginCredentials;
use UserClasses\BusinessObjects\UserAccountBO;

require_once 'vendor/UserClasses/BusinessLayer/src/LoginCredentials.php';

/**
 * LoginCredentials test case.
 */
class LoginCredentialsTest extends TestCase
{

    /**
     *
     * @var LoginCredentials
     */
    private $loginCredentials;
    private $data;
    private $arr_update;

    /**
     * Prepares the environment before running a test.
     */
    protected function setUp()
    {
        parent::setUp();
        
        // TODO Auto-generated LoginCredentialsTest::setUp()
        
        $this->loginCredentials = new LoginCredentials();
        $this->data=new UserAccountBO();
        $arr_update=array();
        $arr_update["accountID"]=1;
        $arr_update["actionCode"]="0xA101";
        $arr_update["roleID"]="1";
        $arr_update["name"]="Mzimkhulu";
        $arr_update["surname"]="Mthethwa";
        $arr_update["staffNumber"]="305941";
        $arr_update["emailAddress"]="bmthethwa@gqunsueng.co.za";
        $arr_update["passwordHash"]="induction";
        $arr_update["accountState"]=0;
        $this->arr_update=$arr_update;
    }

    /**
     * Cleans up the environment after running a test.
     */
    protected function tearDown()
    {
        // TODO Auto-generated LoginCredentialsTest::tearDown()
        $this->loginCredentials = null;
        $this->data=null;
        parent::tearDown();
    }  

    /**
     * Tests LoginCredentials->findUserAccountMatch()
     */
    public function testFindUserAccountMatch()
    {
        // TODO Auto-generated LoginCredentialsTest->testFindUserAccountMatch()
        //$this->markTestIncomplete("findUserAccountMatch test not implemented");
        $arr=array();
        $arr["staffNumber"]="305941";
        $arr["passwordHash"]="induction";
        $this->data->set($arr);
        $status=$this->loginCredentials->findUserAccountMatch($this->data);
        $this->assertEquals(true,$status);
    }

    /**
     * Tests LoginCredentials->updateUserPassword()
     */
    public function testUpdateUserPassword()
    {
        // TODO Auto-generated LoginCredentialsTest->testUpdateUserPassword()
        //$this->markTestIncomplete("updateUserPassword test not implemented");
        $arr=array();
        
        $this->loginCredentials->updateUserPassword();
    }

    /**
     * Tests LoginCredentials->resetUserPassword()
     */
    public function testResetUserPassword()
    {
        // TODO Auto-generated LoginCredentialsTest->testResetUserPassword()
        $this->markTestIncomplete("resetUserPassword test not implemented");
        
        $this->loginCredentials->resetUserPassword();
    }
}

