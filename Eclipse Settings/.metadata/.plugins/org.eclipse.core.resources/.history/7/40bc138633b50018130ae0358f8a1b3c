<?php
use \Psr\Http\Message\ServerRequestInterface as Request;
use \Psr\Http\Message\ResponseInterface as Response;
use UserClasses\BusinessLayer\AxleCoachMapping;
use UserClasses\BusinessObjects\AxleCoachMappingBO;
use UserClasses\BusinessLayer\UserRole;
use UserClasses\BusinessObjects\UserRoleBO;
    //View Axle serial Number Coach Mapping within a Date Range
    $app->get('/axlecoachmappingservice/{axleserialnumber_daterange}', function (Request $request, Response $response, array $args) {
        //Create Objects
        $axleserial=new AxleCoachMapping();
        $axleserialBO=new AxleCoachMappingBO();
        $userrole=new UserRole();
        $userroleBO=new UserRoleBO();
        $axle_date_str=$args["axleserialnumber_daterange"];
        $axle_date_arr=explode("_",$axle_date_str);
        if(isset($_SESSION["staffNumber"])){
            $userrole_arr["userRole2DArray"][0]["roleID"]=$_SESSION["roleID"];
            $userroleBO->set($userrole_arr);
            $accessRight="R";
            $activityName="Coach-Axle Serial Number Mapping";
            if($userrole->checkUserAuthorization($userroleBO, $accessRight, $activityName)){
                $axle_mapping["axleSerialNumber"]=$axle_date_arr[0];
                $axle_mapping["startDate"]=$axle_date_arr[1];
                $axle_mapping["endDate"]=$axle_date_arr[2];
                $axleserialBO->set($axle_mapping);
                $axle_mapping_arr=$axleserial->searchMapping($axleserialBO);
                for($i=0;$i<count($axle_mapping_arr);$i++){
                    $axleserialBO->set($axle_mapping_arr[$i]);
                    $axleserialBO->setTransactionStatus(true);
                    $arr[]=$axleserialBO->getArray();
                }                
            }
            else {
                $axleserialBO->setTransactionStatus(false);
                $arr_err=array();
                $arr_err["errorCode"]="0x18";
                $arr_err["errorDescription"]="You have no access rights to carry out the action you attempted. Please contact the administrator to resolve this.";
                $arr_error["errorAssocArray"][18]=$arr_err;
                $axleserialBO->set($arr_error);
                $arr=$axleserialBO->getArray();
            }
        }
        else{
            $axleserialBO->setTransactionStatus(false);
            //write Error Code and Description
            $arr_err=array();
            $arr_err["errorCode"]="0x19";
            $arr_err["errorDescription"]="Session has expired";
            $arr_error["errorAssocArray"][19]=$arr_err;
            $axleserialBO->set($arr_error);
            $arr=$axleserialBO->getArray();
        }
        $arr_json=json_encode($arr);
        //destroy objects
        unset($axleserial);
        unset($axleserialBO);
        unset($userrole);
        unset($userroleBO);
        $res=$response->withHeader("Content-Type", "application/json");
        return $res->getBody()->write($arr_json);
    });
    
    //Import
    $app->post('/axlecoachmappingservice/import/', function (Request $request, Response $response, array $args) {
        //Create Objects
        $axleserial=new AxleCoachMapping();
        $axleserialBO=new AxleCoachMappingBO();
        $userrole=new UserRole();
        $userroleBO=new UserRoleBO(); 
        $arr_files=$request->getUploadedFiles();
        if(isset($_SESSION["staffNumber"])){
            $userrole_arr["userRole2DArray"][0]["roleID"]=$_SESSION["roleID"];
            $userroleBO->set($userrole_arr);
            $accessRight="C";
            $activityName="Coach-Axle Serial Number Mapping";
            if($userrole->checkUserAuthorization($userroleBO, $accessRight, $activityName)){
                $uploaded_file=$arr_files["axlemapping"]->getClientFilename();
                $filename=$_SESSION["staffNumber"].".csv";
                $axleserialBO->setStaffNumber($_SESSION["staffNumber"]);
                //check if directory exists. If not, create it
                if(!$axleserial->checkDirectoryExists()){
                    //create the directory
                    if($axleserial->createDirectory()){
                        //directory successfully created. Move Uploaded File here
                        //check if File is a CSV file
                        $arr_files["axlemapping"]->moveTo($axleserial->getDirPath()."\\".$uploaded_file);
                        if($axleserial->confirmFileType($uploaded_file)){
                            //File type is indeed CSV. Then process the upload
                            //rename the uploaded file to use the Staff Number
                            $oldname=$axleserial->getDirPath()."\\".$uploaded_file;
                            $newname=$axleserial->getDirPath()."\\".$filename;
                            rename($oldname,$newname);
                            $csv_data=$axleserial->readCSVFileMapping($axleserialBO);
                            foreach($csv_data as $row){
                                //add data to database
                                $axleserialBO->set($row);
                                $axleserial->addMapping($axleserialBO);
                            }
                            $axleserialBO->setTransactionStatus(true);
                            $arr=$axleserialBO->getArray();
                        }
                        else {
                            $axleserial->deleteFile($uploaded_file);
                            $axleserialBO->setTransactionStatus(false);
                            //write Error Code and Description
                            $arr_err=array();
                            $arr_err["errorCode"]="0x05";
                            $arr_err["errorDescription"]="Failed to Upload file. The file imported is not a CSV Textfile";
                            $arr_error["errorAssocArray"][5]=$arr_err;
                            $axleserialBO->set($arr_error);
                            $arr=$axleserialBO->getArray();
                        }
                    }
                }
                else {
                    //directory exists. Check if file exists. If it does, delete it
                    if($axleserial->checkFileExists($uploaded_file)){
                        //delete file
                        if($axleserial->deleteFile($uploaded_file)){
                            //file successfully deleted. Move Uploaded File here
                            //check if File is a CSV file
                            $arr_files["axlemapping"]->moveTo($axleserial->getDirPath()."\\".$uploaded_file);
                            if($axleserial->confirmFileType($uploaded_file)){
                                //File type is indeed CSV. Then process the upload
                                $oldname=$axleserial->getDirPath()."\\".$uploaded_file;
                                $newname=$axleserial->getDirPath()."\\".$filename;
                                rename($oldname,$newname);
                                $csv_data=$axleserial->readCSVFileMapping($axleserialBO);
                                foreach($csv_data as $row){
                                    //add data to database
                                    $axleserialBO->set($row);
                                    $axleserial->addMapping($axleserialBO);
                                }
                                $axleserialBO->setTransactionStatus(true);
                                $arr=$axleserialBO->getArray();
                            }
                            else {
                                $axleserial->deleteFile($uploaded_file);
                                $axleserialBO->setTransactionStatus(false);
                                //write Error Code and Description
                                $arr_err=array();
                                $arr_err["errorCode"]="0x05";
                                $arr_err["errorDescription"]="Failed to Upload file. The file imported is not a CSV Textfile";
                                $arr_error["errorAssocArray"][5]=$arr_err;
                                $axleserialBO->set($arr_error);
                                $arr=$axleserialBO->getArray();
                            }
                        }
                    }
                    else{
                        //move Uploaded File into the Directory
                        //check if File is a CSV file
                        $arr_files["axlemapping"]->moveTo($axleserial->getDirPath()."\\".$uploaded_file);
                        if($axleserial->confirmFileType($uploaded_file)){
                            //File type is indeed CSV. Then process the upload
                            $oldname=$axleserial->getDirPath()."\\".$uploaded_file;
                            $newname=$axleserial->getDirPath()."\\".$filename;
                            rename($oldname,$newname);
                            $csv_data=$axleserial->readCSVFileMapping($axleserialBO);
                            foreach($csv_data as $row){
                                //add data to database
                                $axleserialBO->set($row);
                                $axleserial->addMapping($axleserialBO);
                            }
                            $axleserialBO->setTransactionStatus(true);
                            $arr=$axleserialBO->getArray();
                        }
                        else {
                            $axleserial->deleteFile($uploaded_file);
                            $axleserialBO->setTransactionStatus(false);
                            //write Error Code and Description
                            $arr_err=array();
                            $arr_err["errorCode"]="0x05";
                            $arr_err["errorDescription"]="Failed to Upload file. The file imported is not a CSV Textfile";
                            $arr_error["errorAssocArray"][5]=$arr_err;
                            $axleserialBO->set($arr_error);
                            $arr=$axleserialBO->getArray();
                        }
                    }
                }
                //$arr=$axleserialBO->getArray();
            }
            else {
                $axleserialBO->setTransactionStatus(false);
                $arr_err=array();
                $arr_err["errorCode"]="0x18";
                $arr_err["errorDescription"]="You have no access rights to carry out the action you attempted. Please contact the administrator to resolve this.";
                $arr_error["errorAssocArray"][18]=$arr_err;
                $axleserialBO->set($arr_error);
                $arr=$axleserialBO->getArray();
            }
        }
        else{
            $axleserialBO->setTransactionStatus(false);
            //write Error Code and Description
            $arr_err=array();
            $arr_err["errorCode"]="0x19";
            $arr_err["errorDescription"]="Session has expired";
            $arr_error["errorAssocArray"][19]=$arr_err;
            $axleserialBO->set($arr_error);
            $arr=$axleserialBO->getArray();
        }
        $arr_json=json_encode($arr);
        //destroy objects
        unset($axleserial);
        unset($axleserialBO);
        unset($userrole);
        unset($userroleBO);
        $res=$response->withHeader("Content-Type", "application/json");
        return $res->getBody()->write($arr_json);
        
    });
        
    //Add
    $app->post('/axlecoachmappingservice/add', function (Request $request, Response $response, array $args) {
        //Create Objects
        $axleserial=new AxleCoachMapping();
        $axleserialBO=new AxleCoachMappingBO();
        $userrole=new UserRole();
        $userroleBO=new UserRoleBO();
        //Return Associative Array
        $form_data=json_decode($request->getBody()->getContents(),TRUE);  //get client form data
        if(isset($_SESSION["staffNumber"])){
            $userrole_arr["userRole2DArray"][0]["roleID"]=$_SESSION["roleID"];
            $userroleBO->set($userrole_arr);
            $accessRight="C";
            $activityName="Coach-Axle Serial Number Mapping";
            if($userrole->checkUserAuthorization($userroleBO, $accessRight, $activityName)){
                $axleserialBO->set($form_data);
                $axleserialBO->setStaffNumber($_SESSION["staffNumber"]);
                $axleserialBO->setTransactionStatus($axleserial->addMapping($axleserialBO));
                $arr=$axleserialBO->getArray();
            }
            else{
                $axleserialBO->setTransactionStatus(false);
                $arr_err=array();
                $arr_err["errorCode"]="0x18";
                $arr_err["errorDescription"]="You have no access rights to carry out the action you attempted. Please contact the administrator to resolve this.";
                $arr_error["errorAssocArray"][18]=$arr_err;
                $axleserialBO->set($arr_error);
                $arr=$axleserialBO->getArray();
            }
        }
        else{
            $axleserialBO->setTransactionStatus(false);
            //write Error Code and Description
            $arr_err=array();
            $arr_err["errorCode"]="0x19";
            $arr_err["errorDescription"]="Session has expired";
            $arr_error["errorAssocArray"][19]=$arr_err;
            $axleserialBO->set($arr_error);
            $arr=$axleserialBO->getArray();
        }
        $arr_json=json_encode($arr);
        //destroy objects
        unset($axleserial);
        unset($axleserialBO);
        unset($userrole);
        unset($userroleBO);
        $res=$response->withHeader("Content-Type", "application/json");
        return $res->getBody()->write($arr_json);
        
    });
    
?>