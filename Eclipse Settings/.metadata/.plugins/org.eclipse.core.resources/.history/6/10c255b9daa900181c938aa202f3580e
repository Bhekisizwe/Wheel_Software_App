<?php
declare(strict_types=1);
namespace UserClasses\DataLayer;

/**
 *
 * @author Bheki Mthethwa
 *        
 */
class ManualWheelSettingsDL extends DatabaseManager implements DatabaseFunctionsInt
{

    /**
     * (non-PHPdoc)
     *
     * @see \UserClasses\DataLayer\DatabaseFunctionsInt::getPrimaryKey()
     */
    public function getPrimaryKey(array $data):int
    {
        $connector=$this->dbConnect();  //connect to MariaDB database
        if(isset($connector)){
            /*********RETRIEVE WheelParameters from Database*************/
            $query="SELECT ParamID FROM WheelParameters WHERE ParamName=?";
            $stmt=$connector->prepare($query);
            $paramName=$data["paramName"];
            $stmt->bind_param("s",$paramName);
            $status=$stmt->execute();
            $stmt->store_result();
            $stmt->bind_result($ParamID);
            if($status){
                $arr=array();   //array to store result set
                while($stmt->fetch()){
                    $arr["paramID"]=$ParamID;
                }
                $this->dbClose($connector);
                return (int) $arr["paramID"];
            }
            else{
                $this->dbClose($connector);
                return 0;
            }
        }
        else return 0;
    }

    /**
     * (non-PHPdoc)
     *
     * @see \UserClasses\DataLayer\DatabaseFunctionsInt::create()
     */
    public function create(array $data):bool
    {
        $connector=$this->dbConnect();  //connect to MariaDB database
        if(isset($connector)){
            //successfully connected to database
            /***INSERT Manual Wheel Measurements Settings Data into Database*******/
            $query="INSERT INTO WarningSettings";
            $query.=" (SettingsID,WarningLevel,ParamID) ";
            $query.="VALUES ('',?,?)";
            //prepare SQL script for execution
            $stmt=$connector->prepare($query);
            //bind parameters
            for($i=0;$i<count($data["wearRate2DArray"]);$i++){
                //loop through array contents
                $paramID=$this->getPrimaryKey($data["wearRate2DArray"][$i]);
                $wearRate=$data["wearRate2DArray"][$i]["wearRate"];
                $stmt->bind_param("id",$paramID,$wearRate);
                $status_message=$stmt->execute();
            }
            $this->dbClose($connector);
            return $status_message;
        }
        else return false;
    }

    /**
     * (non-PHPdoc)
     *
     * @see \UserClasses\DataLayer\DatabaseFunctionsInt::update()
     */
    public function update(array $data):bool
    {}

    /**
     * (non-PHPdoc)
     *
     * @see \UserClasses\DataLayer\DatabaseFunctionsInt::dataExists()
     */
    public function dataExists(array $data):bool
    {}

    /**
     * (non-PHPdoc)
     *
     * @see \UserClasses\DataLayer\DatabaseFunctionsInt::delete()
     */
    public function delete(array $data):bool
    {}

    /**
     * (non-PHPdoc)
     *
     * @see \UserClasses\DataLayer\DatabaseFunctionsInt::searchData()
     */
    public function searchData(array $data):array
    {
        
    }
}

